// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// dfddm
NumericVector dfddm(const NumericVector& rt, const SEXP& response, const NumericVector& v, const NumericVector& a, const NumericVector& t0, const NumericVector& w, const NumericVector& sv, const NumericVector& sigma, const NumericVector& err_tol, const bool& log, const std::string& switch_mech, double switch_thresh, const std::string& n_terms_small, const std::string& summation_small);
RcppExport SEXP _fddm_dfddm(SEXP rtSEXP, SEXP responseSEXP, SEXP vSEXP, SEXP aSEXP, SEXP t0SEXP, SEXP wSEXP, SEXP svSEXP, SEXP sigmaSEXP, SEXP err_tolSEXP, SEXP logSEXP, SEXP switch_mechSEXP, SEXP switch_threshSEXP, SEXP n_terms_smallSEXP, SEXP summation_smallSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type rt(rtSEXP);
    Rcpp::traits::input_parameter< const SEXP& >::type response(responseSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type v(vSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type a(aSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type t0(t0SEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type w(wSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type sv(svSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type err_tol(err_tolSEXP);
    Rcpp::traits::input_parameter< const bool& >::type log(logSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type switch_mech(switch_mechSEXP);
    Rcpp::traits::input_parameter< double >::type switch_thresh(switch_threshSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type n_terms_small(n_terms_smallSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type summation_small(summation_smallSEXP);
    rcpp_result_gen = Rcpp::wrap(dfddm(rt, response, v, a, t0, w, sv, sigma, err_tol, log, switch_mech, switch_thresh, n_terms_small, summation_small));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_fddm_dfddm", (DL_FUNC) &_fddm_dfddm, 14},
    {NULL, NULL, 0}
};

RcppExport void R_init_fddm(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
